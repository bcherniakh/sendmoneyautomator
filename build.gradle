group 'io.github.bcherniakh'
version '0.1-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'application'
apply plugin: 'org.junit.platform.gradle.plugin'


// Define the main class for the application
mainClassName = 'io.github.bcherniakh.sendmoney.Main'

sourceCompatibility = 1.8

ext.seleniumVersion = '3.8.1'

ext.hamcrestLibraryVersion = '1.3'
ext.mockitoVersion = '2.13.0'
ext.junitPlatformVersion = '1.0.2'
ext.junitJupiterVersion = '5.0.2'
ext.slf4jVersion = '1.7.25'
ext.log4jVersion = '2.10.0'
ext.commonsCollectionsVersion = '4.0'
ext.guiceVersion = '4.0'

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath 'org.junit.platform:junit-platform-gradle-plugin:1.0.2'
    }
}

junitPlatform {
    platformVersion '1.0.2'
    filters {
        engines {
             include 'junit-jupiter', 'junit-vintage'
        }

        tags {
            exclude 'slow'
        }
    }
     enableStandardTestTask true
     reportsDir file('build/test-results/junit-platform') // this is the default
}

configurations {
    compile.exclude group: "commons-logging"
}


jar {
    manifest {
        attributes 'Main-Class': 'io.github.bcherniakh.sendmoney.Main'
    }
}

dependencies {
    /*Compile dependencies*/
    compile group: 'org.apache.commons', name: 'commons-collections4', version: commonsCollectionsVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: seleniumVersion
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: seleniumVersion
    compile group: 'com.google.inject', name: 'guice', version: guiceVersion

    /*Logging configuration*/
    compile group: 'org.slf4j', name: 'slf4j-api', version: slf4jVersion
    //Specially for Selenium
    compile group: 'org.slf4j', name: 'jcl-over-slf4j', version: slf4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4jVersion
    compile group: 'org.apache.logging.log4j', name: 'log4j-slf4j-impl', version: log4jVersion

    /*Test dependencies*/
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-params', version: junitJupiterVersion
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitJupiterVersion
    testCompile group: 'org.hamcrest', name: 'hamcrest-library', version: hamcrestLibraryVersion
    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion

    testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitJupiterVersion

    // To avoid compiler warnings about @API annotations in JUnit code
    compileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: '1.0.0'
    testCompileOnly group: 'org.apiguardian', name: 'apiguardian-api', version: '1.0.0'

    // To use Log4J's LogManager
    testRuntime("org.apache.logging.log4j:log4j-core:${log4jVersion}")
    testRuntime("org.apache.logging.log4j:log4j-jul:${log4jVersion}")
}

task copyProperties(type: Copy) {
    from 'src/main/resources/application.properties'
    into './'
}

task exportProperties(type: Copy) {
    from 'src/main/resources/application.properties'
    into 'application'
}

task exportRunscripts(type: Copy, dependsOn: exportProperties) {
    from 'runscripts'
    into 'application'
}

task exportApp(type: Jar, dependsOn: exportRunscripts) {
    manifest {
        attributes 'Main-Class': 'io.github.bcherniakh.sendmoney.Main'
    }

    baseName = "sendmoneyautomator-runnable"
    version = null
    destinationDir = file('application')

    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar

    println 'Exported to application directory'
}
